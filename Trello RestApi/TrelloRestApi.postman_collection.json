{
	"info": {
		"_postman_id": "9b37dd8e-d7cc-4e49-96b7-2467b59bdb52",
		"name": "TrelloRestApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24090487"
	},
	"item": [
		{
			"name": "Boards",
			"item": [
				{
					"name": "Create new Board(s)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//used variables\r",
									"var responseBody=pm.response.json();\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"/*verify the most important parameters{  \r",
									"    permissionLevel = private\r",
									"    canBePublic is true\r",
									"    canInvite is true\r",
									"}*/\r",
									"\r",
									"\r",
									"console.log(responseBody);\r",
									"pm.test(\"verify the most important parameters\", function () {\r",
									"    pm.expect(responseBody.prefs.permissionLevel).to.be.eql(\"private\");\r",
									"    pm.expect(responseBody.prefs.canBePublic).to.be.eql(true);\r",
									"    pm.expect(responseBody.prefs.canInvite).to.be.eql(true);\r",
									"    pm.expect(responseBody.closed).to.be.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Trello New Board\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/1/boards/?name={name}&key={{key}}&token={{token}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "{name}"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetNumberofBoards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//used variables\r",
									"var responseBody=pm.response.json().boards;\r",
									"FirstBoardID=responseBody[0].id;\r",
									"LastBoardID = responseBody[responseBody.length - 1].id;\r",
									"console.log(responseBody.length);\r",
									"pm.environment.set(\"FirstBoardID\", FirstBoardID);\r",
									"pm.environment.set(\"LastBoardID\", LastBoardID);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"verify that the number of boards greater than 1\", function () {\r",
									"    pm.expect(responseBody.length).to.be.above(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/members/me?boards=open&key={{key}}&token={{token}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"members",
								"me"
							],
							"query": [
								{
									"key": "boards",
									"value": "open"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//used variable\r",
									"var responseBody=pm.response.json().boards;\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"console.log(responseBody._value);\r",
									"//varify that board is removed successfully\r",
									"pm.test(\"board is removed successfully\", function () {\r",
									"    pm.expect(responseBody._value).to.contain(\"board is removed successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/boards/636fc60fabe6480186a133e2?key={{key}}&token={{token}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"boards",
								"636fc60fabe6480186a133e2"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}